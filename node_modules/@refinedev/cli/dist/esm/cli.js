#!/usr/bin/env node
var gt=Object.defineProperty;var w=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(t,r)=>(typeof require<"u"?require:t)[r]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw new Error('Dynamic require of "'+e+'" is not supported')});var ht=(e,t)=>{for(var r in t)gt(e,r,{get:t[r],enumerable:!0})};import{Command as Io}from"commander";import Co from"figlet";import Nt from"react";import{render as Rt}from"ink";import{readFileSync as yt,existsSync as Et,readJSON as Tt,pathExists as ge}from"fs-extra";import he from"execa";import Pt from"globby";import fe from"path";import It from"preferred-pm";import xt from"ora";var wt=async(e,t)=>{let r=xt({color:"cyan",text:t}).start(),n=await e();return r.stop(),n},U=wt;var ee=()=>{if(!Et("package.json"))throw new Error("./package.json not found");return JSON.parse(yt("package.json","utf8"))},W=()=>{let e=ee();return Object.keys(e.dependencies||{})};var xe=()=>{let e=ee();return Object.keys(e.devDependencies||{})},Y=()=>ee().scripts,F=async()=>{var e;try{let t=await he("npm",["ls","--depth=0","--json"],{reject:!1}),r=((e=JSON.parse(t.stdout))==null?void 0:e.dependencies)||{},n=Object.keys(r).filter(s=>s.startsWith("@refinedev")),o=[];for(let s of n){let c=r[s].version;o.push({name:s,version:c})}return o}catch{return Promise.resolve(null)}},we=async()=>{let e=["ably","airtable","altogic","antd","appwrite","chakra-ui","codemod","connect","core","graphql","hasura","inferencer","kbar","mantine","medusa","mui","nestjsx-crud","nextjs-router","nhost","react-hook-form","react-location","react-router","react-router-v6","react-table","remix","sdk","simple-rest","strapi","strapi-graphql","strapi-v4","supabase"];try{let t=await Pt("node_modules/@refinedev/*",{onlyDirectories:!0}),r=e.flatMap(o=>{try{let s=w.resolve(fe.join("@refinedev",o,"package.json"));return[fe.dirname(s)]}catch{return[]}}),n=[];return await Promise.all([...r,...t].map(async o=>{if(await ge(`${o}/package.json`)){let c=await Tt(`${o}/package.json`);n.push({name:c.name,path:o})}})),n}catch{return[]}},ye=async e=>await ge(`${e}/refine.config.js`),D={npm:{install:["install","--save"],installDev:["install","--save-dev"],outdatedJson:["outdated","--json"]},yarn:{install:["add"],installDev:["add","-D"],outdatedJson:["outdated","--json"]},pnpm:{install:["add"],installDev:["add","-D"],outdatedJson:["outdated","--format","json"]}},N=async()=>{let e=await U(()=>It(process.cwd()),"Getting package manager...");if(!e)throw new Error("Package manager not found.");return e},H=async e=>{let t=await N();try{let r=D[t.name].install,n=he(t.name,[...r,...e],{stdio:"inherit"});n.on("message",o=>{console.log(o)}),n.on("error",o=>{console.log(o)}),n.on("exit",o=>{if(o===0){console.log("All `refine` packages updated  \u{1F389}");return}console.log(`Application exited with code ${o}`)})}catch(r){throw new Error(r)}},Ee=e=>{let t=e.lastIndexOf("@");return t<=0?{name:e,version:null}:{name:e.slice(0,t),version:e.slice(t+1)}};import y,{useRef as Te}from"react";import Ct from"ink-table";import{Box as vt,Text as b}from"ink";var Pe={name:1,current:2,wanted:3,latest:4},bt=4,te=e=>{let t=e.split(".");return{major:t[0],minor:t[1],patch:t[2]}},Ie=(e,t)=>e.major.trim()!==t.major.trim()?{major:"red",minor:"red",patch:"red"}:e.minor.trim()!==t.minor.trim()?{major:"white",minor:"yellow",patch:"yellow"}:e.patch.trim()!==t.patch.trim()?{major:"white",minor:"white",patch:"green"}:{major:"white",minor:"white",patch:"white"},kt=({data:e,command:t})=>{let r=Te(1),n=Te(0);return y.createElement(vt,{width:"100%",flexDirection:"column",alignItems:"center",justifyContent:"center"},y.createElement(b,null,"Update Available"),y.createElement(Ct,{data:e,cell:o=>{var f;let s=y.createElement(b,null,o.children),c=(f=o.children)==null?void 0:f.toString();if(!c)return s;let a=te(e[n.current].current);if(r.current===Pe.wanted){let i=te(c),p=Ie(a,i);s=y.createElement(Ce,{major:{color:p.major,text:i.major},minor:{color:p.minor,text:i.minor},patch:{color:p.patch,text:i.patch}})}if(r.current===Pe.latest){let i=te(c),p=Ie(a,i);s=y.createElement(Ce,{major:{color:p.major,text:i.major},minor:{color:p.minor,text:i.minor},patch:{color:p.patch,text:i.patch}})}return r.current===bt?(n.current+=1,r.current=1):r.current+=1,s}}),y.createElement(b,null,"To update ",y.createElement(b,{bold:!0},"`refine`")," packages with the wanted version"),y.createElement(b,null,"Run the following command"," ",y.createElement(b,{color:"yellowBright"},t)))},Ce=({major:e,minor:t,patch:r})=>y.createElement(b,null,y.createElement(b,{color:e.color},e.text),y.createElement(b,{color:t.color},".",t.text,"."),y.createElement(b,{color:r.color},r.text)),ve=kt;var St=async()=>{let e="npx @refinedev/cli update",t=W(),r=Object.keys(Y()),n=t.includes("@refinedev/cli"),o=r.includes("refine");if(!n&&!o)return e;let s=await N();return o?`${s.name} run refine update`:n?"npx refine update":e},J=async e=>{let t=await St();Rt(Nt.createElement(ve,{data:e,command:t}))};import _t from"execa";import Ot from"semver-diff";var Dt=e=>e.command("check-updates").description("Check all installed `refine` packages are up to date").action(At),At=async()=>{let e=await U(q,"Checking for updates...");if(!e.length){console.log("All `refine` packages are up to date \u{1F389}\n");return}await J(e)},q=async()=>await jt(),jt=async()=>{let e=await $t();if(!e)return[];let t=[];return Object.keys(e).forEach(n=>{let o=e[n];n.includes("@refinedev")&&t.push({name:n,current:o.current,wanted:o.wanted,latest:o.latest})}),t.filter(n=>!!Ot(n.current,n.latest))},$t=async()=>{let e="npm",{stdout:t,timedOut:r}=await _t(e,D[e].outdatedJson,{reject:!1,timeout:25e3});if(r)throw new Error("Timed out while checking for updates.");return t?JSON.parse(t):null},be=Dt;import{copySync as Vt,unlinkSync as Wt,moveSync as qt,pathExistsSync as Oe,mkdirSync as Xt}from"fs-extra";import se from"temp";import{plural as Yt}from"pluralize";import Ht from"execa";import Jt from"inquirer";import{join as De}from"path";var A=(a=>(a.REACT_SCRIPT="react-scripts",a.REMIX="remix",a.NEXTJS="nextjs",a.VITE="vite",a.CRACO="craco",a.PARCEL="parcel",a.UNKNOWN="unknown",a))(A||{});var re=(o=>(o.ANTD="antd",o.MUI="mui",o.MANTINE="mantine",o.CHAKRA="chakra-ui",o))(re||{});var ke=(n=>(n.NPM="npm",n.YARN="yarn",n.PNPM="pnpm",n))(ke||{});var x=()=>{let e=W(),t=xe();return e.includes("@craco/craco")||t.includes("@craco/craco")?"craco":e.includes("react-scripts")||t.includes("react-scripts")?"react-scripts":e.includes("next")||t.includes("next")?"nextjs":e.includes("@remix-run/react")||t.includes("@remix-run/react")?"remix":e.includes("vite")||t.includes("vite")?"vite":e.includes("parcel")||t.includes("parcel")?"parcel":"unknown"},Ne=()=>{let e=W();if(e.includes("@refinedev/antd"))return"antd";if(e.includes("@refinedev/mui"))return"mui";if(e.includes("@refinedev/chakra-ui"))return"chakra-ui";if(e.includes("@refinedev/mantine"))return"mantine"};import B from"handlebars";import{readFileSync as Ut,readdirSync as Ft,createFileSync as Bt,writeFileSync as Lt,unlinkSync as zt}from"fs-extra";var Mt=(e,t)=>{let r=Ut(e);return B.registerHelper("ifIn",function(o,s,c){return o.includes(s)?c.fn(B):c.inverse(B)}),B.registerHelper("formatInferencerComponent",function(o){if(o)switch(o){case"chakra-ui":return"ChakraUI";default:return o.charAt(0).toUpperCase()+o.slice(1)}}),B.registerHelper("capitalize",function(o){if(o)return o.charAt(0).toUpperCase()+o.slice(1)}),B.compile(r.toString())(t)},Re=(e,t)=>{Ft(e).forEach(n=>{let o=`${e}/${n}`,s=`${e}/${n.replace(".hbs","")}`;Bt(s),Lt(s,Mt(o,t)),zt(o)})};var Se=e=>e.charAt(0).toUpperCase()+e.slice(1);var oe=e=>{switch(e){case"nextjs":return{path:"src/components",alias:"../src/components"};case"remix":return{path:"app/components",alias:"~/components"}}return{path:"src/pages",alias:"pages"}},_e=e=>{switch(e){case"remix":return"./app";case"nextjs":case"react-scripts":case"vite":case"craco":case"parcel":case"unknown":default:return"./src"}};var ne=["list","create","edit","show"],Gt=e=>{let t=x(),{path:r}=oe(t);return e.command("create-resource").allowExcessArguments(!0).description("Create a new resource files").option("-a, --actions [actions]","Only generate the specified actions. (ex: list,create,edit,show)","list,create,edit,show").option("-p, --path [path]","Path to generate the resource files",r).action(Kt)},Kt=async(e,t)=>{let{args:r}=t,n=e.actions;if(!r.length){let{name:o,selectedActions:s}=await Jt.prompt([{type:"input",name:"name",message:"Resource Name",validate:c=>c?!0:"Resource Name is required"},{type:"checkbox",name:"selectedActions",message:"Select Actions",choices:ne,default:e.actions.split(",")}]);r=[o],n=s.join(",")}r.forEach(o=>{let s=n?n.split(","):void 0,{path:c,alias:a}=oe(x()),f=Yt(o).toLowerCase(),i=De(process.cwd(),c,f);if(Oe(i)){console.error(`Resource (${De(c,f)}) already exist! \u274C`);return}let p=Se(o),I=Ne(),$=`${__dirname}/../templates/resource`,m=Zt();Vt($,m);let l={resourceName:o,resource:p,actions:s||ne,uiFramework:I};Re(m,l),s&&ne.forEach(T=>{s.includes(T)||Wt(`${m}/${T}.tsx`)}),Xt(e.path,{recursive:!0});let d=`${e.path}/${f}`,u={};Oe(d)&&(u={overwrite:!0}),qt(m,d,u),se.cleanupSync();let k=w.resolve(".bin/jscodeshift"),{stderr:E,stdout:O}=Ht.sync(k,["./","--extensions=ts,tsx,js,jsx","--parser=tsx",`--transform=${__dirname}/../src/transformers/resource.ts`,"--ignore-pattern=**/.cache/**","--ignore-pattern=**/node_modules/**","--ignore-pattern=**/build/**","--ignore-pattern=**/.next/**",`--__actions=${l.actions}`,`--__pathAlias=${a}`,`--__resourceFolderName=${f}`,`--__resource=${p}`,`--__resourceName=${o}`]);E&&console.log(E),console.log(`Resource (${d}) generated successfully! \u{1F389}`)})},Zt=()=>(se.track(),se.mkdirSync("resource")),Ae=Gt;import*as je from"dotenv";je.config();var Qt={development:/dev/i,production:/prod/i,test:/test|tst/i,"continuous-integration":/ci/i,"user-acceptance-testing":/uat/i,"system-integration-testing":/sit/i},er=()=>{let e=process.env.NODE_ENV;if(!e)return"development";let t="custom";for(let[r,n]of Object.entries(Qt))if(n.test(e)){t=r;break}return t},C={NODE_ENV:er(),REFINE_NO_TELEMETRY:process.env.REFINE_NO_TELEMETRY||"false",UPDATE_NOTIFIER_IS_DISABLED:process.env.UPDATE_NOTIFIER_IS_DISABLED||"false",UPDATE_NOTIFIER_CACHE_TTL:process.env.UPDATE_NOTIFIER_CACHE_TTL||1e3*60*60*24,REFINE_PROXY_DOMAIN:process.env.REFINE_PROXY_DOMAIN||"https://refine.dev",REFINE_PROXY_TARGET:process.env.REFINE_PROXY_TARGET||"http://localhost:3000",REFINE_PROXY_PORT:process.env.REFINE_PROXY_PORT||"7313",REFINE_PROXY_REWRITE_URL:process.env.REFINE_REWRITE_URL||"http://localhost:7313"};import tr from"express";import{createProxyMiddleware as ae}from"http-proxy-middleware";var rr=e=>e.command("proxy").description("Manage proxy settings").action(or).option("-p, --port [port]","Port to serve the proxy server. You can also set this with the `REFINE_PROXY_PORT` environment variable.",C.REFINE_PROXY_PORT).option("-t, --target [target]","Target to proxy. You can also set this with the `REFINE_PROXY_TARGET` environment variable.",C.REFINE_PROXY_TARGET).option("-d, --domain [domain]","Domain to proxy. You can also set this with the `REFINE_PROXY_DOMAIN` environment variable.",C.REFINE_PROXY_DOMAIN).option("-r, --rewrite-url [rewrite URL]","Rewrite URL for redirects. You can also set this with the `REFINE_PROXY_REWRITE_URL` environment variable.",C.REFINE_PROXY_REWRITE_URL),or=async({port:e,target:t,domain:r,rewriteUrl:n})=>{let o=tr(),c=new URL(t).protocol==="http:"?a=>{var f;a.headers["set-cookie"]&&((f=a.headers["set-cookie"])==null||f.forEach((i,p)=>{a&&a.headers&&a.headers["set-cookie"]&&(a.headers["set-cookie"][p]=i.replace("Secure;",""))}))}:void 0;o.use("/.refine",ae({target:`${r}/.refine`,changeOrigin:!0,pathRewrite:{"^/.refine":""},logProvider:()=>({log:console.log,info:a=>{`${a}`.includes("Proxy rewrite rule created")||(`${a}`.includes("Proxy created")?console.log(`Proxying localhost:${e}/.refine to ${r}/.refine`):a&&console.log(a))},warn:console.warn,debug:console.debug,error:console.error})})),o.use("/.auth",ae({target:`${r}/.auth`,changeOrigin:!0,cookieDomainRewrite:{"refine.dev":""},headers:{"auth-base-url-rewrite":`${n}/.auth`},pathRewrite:{"^/.auth":""},logProvider:()=>({log:console.log,info:a=>{`${a}`.includes("Proxy rewrite rule created")||(`${a}`.includes("Proxy created")?console.log(`Proxying localhost:${e}/.auth to ${r}/.auth`):a&&console.log(a))},warn:console.warn,debug:console.debug,error:console.error}),onProxyRes:c})),o.use("*",ae({target:`${t}`,changeOrigin:!0,ws:!0,logProvider:()=>({log:console.log,info:a=>{`${a}`.includes("Proxy created")?console.log(`Proxying localhost:${e} to ${t}`):a&&console.log(a)},warn:console.warn,debug:console.debug,error:console.error})})),o.listen(Number(e))},$e=rr;var v={["react-scripts"]:{dev:["start"],start:["start"],build:["build"],getBin:()=>w.resolve(".bin/react-scripts")},["vite"]:{dev:["dev"],start:["preview"],build:["build"],getBin:()=>w.resolve(".bin/vite")},["nextjs"]:{dev:["dev"],start:["start"],build:["build"],getBin:()=>w.resolve(".bin/next")},["remix"]:{dev:["dev"],start:["build"],build:["build"],getBin:e=>{let t=e==="start"?"remix-serve":"remix";return w.resolve(`.bin/${t}`)}},["craco"]:{dev:["start"],start:["start"],build:["build"],getBin:()=>w.resolve(".bin/craco")},["parcel"]:{dev:["start"],start:["start"],build:["build"],getBin:()=>w.resolve(".bin/parcel")},["unknown"]:{dev:[],start:[],build:[],getBin:()=>"unknown"}};import nr from"execa";var R=async(e,t)=>{var n,o;if(e==="unknown"){let s=Object.values(A).filter(c=>c!=="unknown").join(", ");console.error(`We couldn't find executable for your project. Supported executables are ${s}.
Please use your own script directly. If you think this is an issue, please report it at: https://github.com/refinedev/refine/issues`);return}let r=nr(e,t,{stdio:"pipe",windowsHide:!1,env:{FORCE_COLOR:"true",...process.env}});return(n=r.stdout)==null||n.pipe(process.stdout),(o=r.stderr)==null||o.pipe(process.stderr),await r};import sr from"conf";import ar from"chalk";var Ue=e=>typeof btoa<"u"?btoa(e):Buffer.from(e).toString("base64");var ir="refine-update-notifier",S=new sr({projectName:ir,defaults:{key:"",lastUpdated:0,packages:[]}}),L=async()=>{if(dr())return;let e=await lr();if(e!==null){if(e){Fe();return}cr(),Fe()}},cr=async()=>{let e=S.get("packages");e!=null&&e.length&&(await J(e),console.log(`
`))},lr=async()=>{let e=await mr(),t=pr();return e===null?null:!!(t||!e)},Fe=async()=>{try{let e=await q();return S.set("packages",e),S.set("lastUpdated",Date.now()),S.set("key",await Be()),e}catch{return S.set("packages",[]),S.set("lastUpdated",Date.now()),S.set("key",""),null}},pr=()=>{let e=S.get("lastUpdated");if(!e)return!0;let r=Date.now()-e,n=Number(C.UPDATE_NOTIFIER_CACHE_TTL);return r>=n},mr=async()=>{let e=S.get("key"),t=await Be();return t===null?null:e===t},Be=async()=>{let e=await F();if(!e)return console.error(ar.red("Something went wrong when trying to get installed `refine` packages.")),null;let t=e.map(n=>`${n.name}@${n.version}`);return Ue(t.toString())},dr=()=>C.UPDATE_NOTIFIER_IS_DISABLED.toLocaleLowerCase()==="true";var z=e=>{let t=x(),r=v[t][e];return t==="remix"&&e==="start"&&(t="remix-serve"),`It runs: \`${t} ${r.join(" ")}\`. Also accepts all the arguments \`${t}\` accepts.`};var ur=e=>e.command("start").description(z("start")).allowUnknownOption(!0).argument("[args...]").action(fr),fr=async e=>{let t=x(),r=v[t].getBin("start"),o=[...v[t].start,...e];await L(),R(r,o)},ie=ur;var gr=e=>e.command("dev").description(z("dev")).allowUnknownOption(!0).argument("[args...]").action(hr),hr=async e=>{let t=x(),r=v[t].getBin("dev"),o=[...v[t].dev,...e];await L(),R(r,o)},ce=gr;var xr=e=>e.command("build").description(z("build")).allowUnknownOption(!0).argument("[args...]").action(wr),wr=async e=>{let t=x(),r=v[t].getBin("build"),o=[...v[t].build,...e];await L();try{await R(r,o)}catch{process.exit(1)}},le=xr;import Le from"chalk";var yr=e=>e.command("run").description("Runs a defined package script. If no `command` is provided, it will list the available scripts").allowUnknownOption(!0).argument("[command] [args...]").action(Er),Er=async e=>{let[t,...r]=e,n=Y();if(!t){console.log(`Available via ${Le.blue("`refine run`")}:
`);for(let[c,a]of Object.entries(n))console.log(`  ${c}`),console.log(`    ${Le.dim(a)}`),console.log();return}if(!Object.keys(n).includes(t)){let c=`${process.cwd()}/node_modules/.bin/${t}`;R(c,r);return}let s=await N();R(s.name,["run",t,...r])},pe=yr;import Vr from"react";import{render as Wr}from"ink";import et from"path";import V from"chalk";import K from"inquirer";import qr from"inquirer-autocomplete-prompt";import{ensureFile as Xr,pathExists as tt,readFile as Yr,writeFile as Hr}from"fs-extra";import Ye from"path";import kr from"path";var me={};ht(me,{PackageManagerTypes:()=>ke,ProjectTypes:()=>A,UIFrameworks:()=>re,appendAfterImports:()=>We,getFileContent:()=>G,getImports:()=>M,getNameChangeInImport:()=>Me});var Tr=/import(?:(?:(?:[ \n\t]+([^ *\n\t\{\},]+)[ \n\t]*(?:,|[ \n\t]+))?([ \n\t]*\{(?:[ \n\t]*[^ \n\t"'\{\}]+[ \n\t]*,?)+\})?[ \n\t]*)|[ \n\t]*\*[ \n\t]*as[ \n\t]+([^ \n\t\{\}]+)[ \n\t]+)from[ \n\t]*(?:['"])([^'"\n]+)(?:['"])(?:;?)/g,Pr=/((?:\w|\s|_)*)( as )((?:\w|\s|_)*)( |,)?/g,M=e=>{let t=e.matchAll(Tr),r=[];for(let n of t){let[o,s,c,a,f]=n;r.push({statement:o,importPath:f,...s&&{defaultImport:s},...c&&{namedImports:c},...a&&{namespaceImport:a}})}return r==null?void 0:r.filter(Boolean)},Me=e=>{let t=e.matchAll(Pr),r=[];for(let n of t){let[o,s,c,a,f]=n;r.push({statement:o,fromName:s.trim(),toName:a.trim(),afterCharacter:f})}return r},Ir=(e,t)=>{var s;let r=e.substring(0,e.indexOf(t.statement)),n=M(r).pop();return n?r.substring(r.indexOf(n==null?void 0:n.statement)+((s=n==null?void 0:n.statement)==null?void 0:s.length)):r},Cr=(e,t)=>!!(t?Ir(e,t):"").trim(),ze=["react","@refinedev/core","@refinedev/"],Ve=e=>{var m;let t=e,r=M(e),n=r.filter(l=>!l.statement.includes("import type ")),o=r.filter(l=>l.statement.includes("import type")),s=[],c=[];n.forEach(l=>{Cr(e,l)?s.push(l):c.push(l)});let a=t.indexOf((m=c==null?void 0:c[0])==null?void 0:m.statement);c.forEach(l=>{t=t.replace(l.statement,"")}),o.forEach(l=>{t=t.replace(l.statement,"")});let f=c.reduce((l,d)=>{let{importPath:u}=d;return l[u]?l[u].push(d):l[u]=[d],l},{}),I=[...Object.entries(f).map(([l,d])=>{let u=d.find(T=>T.defaultImport),k=d.find(T=>T.namespaceImport),E=d.filter(T=>T.namedImports).map(T=>(T.namedImports??"").replace(/{|}/g,"").trim().split(",").map(Q=>Q.trim()).filter(Boolean).join(", ")).join(", "),O="";return k&&(O+=k.statement+`
`),(u||E)&&(u&&E?O+=`import ${u.defaultImport}, { ${E} } from "${d[0].importPath}";
`:u?O+=`import ${u.defaultImport} from "${d[0].importPath}";
`:O+=`import { ${E} } from "${d[0].importPath}";
`),[l,O]})].sort(([l],[d])=>{let u=ze.findIndex(E=>l.includes(E)),k=ze.findIndex(E=>d.includes(E));return u===k?l.localeCompare(d):u===-1?1:k===-1?-1:u-k}).map(([,l])=>l).join(""),$=o.map(l=>l.statement).join(`
`);return t=t.substring(0,a)+I+$+t.substring(a),t};var We=(e,t)=>{let r=M(e),n=r[r.length-1],o=n?e.indexOf(n.statement):e.length-1;return e.slice(0,o+(n==null?void 0:n.statement.length))+`
`+t+`
`+e.slice(o+(n==null?void 0:n.statement.length))};import{readFileSync as vr}from"fs-extra";import{join as br}from"path";function G(e){if(this!=null&&this.absolutePackageDir)try{return vr(br(this.absolutePackageDir,e)).toString()}catch{return}}var qe=w("module"),Nr=qe.prototype.require,Xe=(e,t)=>{qe.prototype.require=function(...r){return r[0]==="@refinedev/cli"?{...me,getFileContent:n=>G.call({absolutePackageDir:t?e:kr.join(process.cwd(),e)},n)}:Nr.apply(this,r)}};var de=async(e,t)=>{try{return Xe(e,t),w(Ye.join(t?e:Ye.join(process.cwd(),e),"refine.config.js"))}catch{return}};import{format as Rr,resolveConfig as Sr}from"prettier";var He=async e=>{try{let t=await Sr(process.cwd());return Rr(e,{...t??{},parser:"typescript"})}catch{return e}};import g from"react";import jr from"ink-markdown";import $r from"dedent";import{Box as Ur,Text as h}from"ink";var P={SUCCESS:"SUCCESS",UNKNOWN_ERROR:"UNKNOWN_ERROR",SOURCE_PATH_NOT_FOUND:"SOURCE_PATH_NOT_FOUND",TARGET_PATH_NOT_FOUND:"TARGET_PATH_NOT_FOUND",SOURCE_PATH_NOT_A_FILE:"SOURCE_PATH_NOT_A_FILE",TARGET_ALREADY_EXISTS:"TARGET_ALREADY_EXISTS"};import _r from"chalk";import Or from"cardinal";import Dr from"boxen";var Ar=e=>{let t=/^(?:\/\/\s?title:\s?)(.*?)\n/g,[r,n]=t.exec(e)??[];if(n){let o=n.trim(),s=e.replace(r,"");return{title:o,code:s}}return{code:e}},Je=e=>{let{title:t,code:r}=Ar(e),n="";try{n=Or.highlight(r,{jsx:!0})}catch{n=r}return Dr(n,{padding:1,margin:0,borderStyle:"round",borderColor:"gray",titleAlignment:"left",title:t?_r.bold(t):void 0})};var Fr=({label:e,files:t,message:r="**`Warning:`** You should use the component where you want to use it."})=>{let n=t.filter(([,i])=>Object.values(P).filter(p=>p!==P.SUCCESS).includes(i)),o="success";switch(n.length){case 0:o="success";break;case t.length:o="error";break;default:o="warning";break}let s=()=>{switch(o){case"success":return g.createElement(h,{color:"blueBright"},"Successfully swizzled ",g.createElement(h,{bold:!0},e));case"warning":return g.createElement(h,{color:"yellowBright"},"Swizzle completed with errors for"," ",g.createElement(h,{bold:!0},e));case"error":return g.createElement(h,{color:"redBright"},"Swizzle failed for ",g.createElement(h,{bold:!0},e))}return null},c=i=>{let p=i==null?void 0:i.replace(process.cwd(),"");return p!=null&&p.startsWith("/")?p.slice(1):p!=null&&p.startsWith("./")?p.slice(2):p},a=()=>g.createElement(g.Fragment,null,g.createElement(h,{dimColor:!0},"File",t.length>1?"s":""," created:"),t.map(([i,p],I)=>p===P.SUCCESS?g.createElement(h,{key:I,dimColor:!0,color:"cyanBright"},` - ${c(i)}`):p===P.TARGET_ALREADY_EXISTS?g.createElement(h,{key:I,dimColor:!0,color:"cyanBright"}," - ",g.createElement(h,{color:"yellowBright",bold:!0},"[FILE_ALREADY_EXISTS]"," "),`${c(i)}`):p===P.SOURCE_PATH_NOT_A_FILE?g.createElement(h,{key:I,dimColor:!0,color:"cyanBright"}," - ",g.createElement(h,{color:"yellowBright",bold:!0},"[SOURCE NOT FOUND]"," "),`${c(i)}`):g.createElement(h,{key:I,dimColor:!0,color:"cyanBright"}," - ",g.createElement(h,{color:"yellowBright",bold:!0},"[",p,"]")))),f=()=>r&&o!=="error"?g.createElement(g.Fragment,null,g.createElement(jr,{code:Je},$r(`
`+r)),g.createElement(h,null,"\xA0")):null;return g.createElement(Ur,{width:"100%",flexDirection:"column",alignItems:"flex-start",justifyContent:"flex-start"},g.createElement(h,null,"\xA0"),s(),a(),g.createElement(h,null,"\xA0"),f())},Ge=Fr;var Ke=e=>{let t=/(\/\/|\/\*)(\s?)swizzle-remove-start([\s\S]*?)(\/\/|\/\*)(\s?)swizzle-remove-end(\s*)(\*\/)?/g;return e.replace(t,"")};import Jr from"boxen";var Ze=()=>{let e;try{e=x()}catch{e=void 0}return _e(e)};import Br from"inquirer";import Lr from"chalk";var Qe=async e=>{await zr(e)?await H(e):await Mr(e)},zr=async e=>{let t=`This component requires following packages to be installed:
`.concat(e.map(n=>` - ${n}`).join(`
`)).concat(`
Do you want to install them?`),{installRequiredPackages:r}=await Br.prompt([{type:"confirm",name:"installRequiredPackages",default:!0,message:t}]);return r},Mr=async e=>{let t=await N(),r=D[t.name].install.join(" "),n=e.join(" "),o=`${t.name} ${r} ${n}`;console.log(`
You can install them manually by running this command:`),console.log(Lr.bold.blueBright(o))};var Gr=e=>e.command("swizzle").description(`Export a component or a function from ${V.bold("refine")} packages to customize it in your project`).action(Kr),rt=e=>(t,r="")=>e.filter(o=>{var s;return o.label.toLowerCase().includes(r.toLowerCase())||((s=o.group)==null?void 0:s.toLowerCase().includes(r.toLowerCase()))}).flatMap((o,s,c)=>{var i;return[...(o==null?void 0:o.group)&&((i=c[s-1])==null?void 0:i.group)!==o.group&&o.group?[new K.Separator(`${V.bold(o.group)}`)]:[],{name:` ${o.label}`,value:o!=null&&o.value?o.value:o}]}),Kr=async e=>{var p,I,$;K.registerPrompt("autocomplete",qr);let t=await we(),r=[];if(await Promise.all(t.map(async m=>{let l=await ye(m.path),d=r.findIndex(u=>u.name===m.name)===-1;l&&d&&r.push(m)})),r.length===0){console.log("No refine packages found with swizzle configuration.");return}console.log(`${Jr(`Found ${V.blueBright(r.length)} installed ${V.blueBright.bold("refine")} packages with swizzle configuration.`,{padding:1,textAlignment:"center",dimBorder:!0,borderColor:"blueBright",borderStyle:"round"})}
`);let n=await Promise.all(r.map(async m=>{let l=await de(m.path,!0)??await de(m.path,!1)??{swizzle:{items:[]}};return{...m,config:l}})),{selectedPackage:o}=await K.prompt([{type:"autocomplete",pageSize:10,name:"selectedPackage",message:"Which package do you want to swizzle?",emptyText:"No packages found.",source:rt(n.sort((m,l)=>{var d,u;return(((d=m.config)==null?void 0:d.group)??"").localeCompare(((u=l.config)==null?void 0:u.group)??"")}).map(m=>{var l,d;return{label:((l=m.config)==null?void 0:l.name)??m.name,value:m,group:(d=m.config)==null?void 0:d.group}}))}]),{swizzle:{items:s,transform:c}}=o.config,a;if(s.length===0){console.log(`No swizzle items found for ${V.bold(((p=o.config)==null?void 0:p.name)??o.name)}`);return}else s.length===1?a=s[0]:s.length>1&&(a=(await K.prompt([{type:"list",pageSize:10,name:"selectedComponent",message:"Which component do you want to swizzle?",emptyText:"No components found.",choices:rt(s.sort((l,d)=>l.group.localeCompare(d.group)))({},"")}])).selectedComponent);if(!a){console.log(`No swizzle items selected for ${V.bold(((I=o.config)==null?void 0:I.name)??o.name)}`);return}let f=Ze(),i=await Promise.all(a.files.map(async m=>{var l;try{let d=m.src?et.join(o.path,m.src):void 0,u=m.dest?et.join(process.cwd(),f,m.dest):void 0;if(!d)return console.log("No src path found for file",m),["",P.SOURCE_PATH_NOT_FOUND];if(!u)return console.log("No destination path found for file",m),["",P.TARGET_PATH_NOT_FOUND];if(!await tt(d))return[u,P.SOURCE_PATH_NOT_A_FILE];let E=await Yr(d,"utf-8");if(await tt(u))return[u,P.TARGET_ALREADY_EXISTS];await Xr(u);let T=Ke(E),Z=((l=m.transform)==null?void 0:l.call(m,T))??T,Q=(c==null?void 0:c(Z,d,u))??Z,ut=Ve(Q),ft=await He(ut);return await Hr(u,ft),[u,P.SUCCESS]}catch{return["",P.UNKNOWN_ERROR]}}));if(i.length>0){let{unmount:m}=Wr(Vr.createElement(Ge,{label:a.label,files:i,message:a.message}));m(),($=a==null?void 0:a.requiredPackages)!=null&&$.length&&await Qe(a.requiredPackages)}},ot=Gr;import{Option as to}from"commander";import X from"inquirer";import st from"semver-diff";import ue from"chalk";var nt=e=>{let t=e.filter((n,o)=>e.indexOf(n)!==o),r=new Set(t);return Array.from(r)};var at=async e=>{let t=Qr(e);if(!t){console.log("All `refine` packages are up to date. \u{1F389}");return}let r=eo(t),n=await X.prompt([{type:"checkbox",name:"packages",message:"Choose packages to update",pageSize:r.pageSize,choices:r.choices,validate:Zr}]);return n.packages.length>0?n.packages:null},Zr=e=>{let r=e.map(o=>Ee(o)).map(o=>o.name),n=nt(r);return n.length>0?`You can't update the same package more than once. Please choice one.
 Duplicates: ${n.join(", ")}`:!0},Qr=e=>{if(e.length===0)return null;let t={patch:[],minor:[],major:[]};return e.forEach(r=>{let n=r.current,o=st(n,r.wanted),s=st(n,r.latest);if(o===s&&s){t[s].push({name:r.name,from:n,to:r.latest});return}o&&t[o].push({name:r.name,from:n,to:r.wanted}),s&&t[s].push({name:r.name,from:n,to:r.latest})}),t},eo=e=>{let t=0,r=0;[e.patch,e.minor,e.major].forEach(i=>{i.forEach(p=>{p.name.length>t&&(t=p.name.length),p.from.length>r&&(r=p.from.length)})}),t+=2;let n=[],o="Package".padEnd(t),s="From".padEnd(r),a=`
   ${o} ${s}${"To".padStart(r)}`;n.push(new X.Separator(a)),e.patch.length>0&&(n.push(new X.Separator(ue.reset.bold.blue(`
Patch Updates`))),e.patch.forEach(i=>{n.push({name:`${i.name.padEnd(t)} ${i.from.padStart(r)} -> ${i.to}`,value:`${i.name}@${i.to}`})})),e.minor.length>0&&(n.push(new X.Separator(ue.reset.bold.blue(`
Minor Updates`))),e.minor.forEach(i=>{n.push({name:`${i.name.padEnd(t)} ${i.from.padStart(r)} -> ${i.to}`,value:`${i.name}@${i.to}`})})),e.major.length>0&&(n.push(new X.Separator(ue.reset.bold.blue(`
Major Updates`))),e.major.forEach(i=>{n.push({name:`${i.name.padEnd(t)} ${i.from.padStart(r)} -> ${i.to}`,value:`${i.name}@${i.to}`})}));let f=n.length+6;return{choices:n,pageSize:f}};var ro=e=>e.command("update").description("Interactively select and update all `refine` packages to selected version. To skip the interactive mode, use the `--all` option.").addOption(new to("-t, --tag [tag]","Select version to update to.").choices(["next","latest"]).default("wanted","Version ranges in the `package.json` will be installed")).option("-a, --all","Update all `refine` packages to the selected `tag`. If `tag` is not provided, version ranges in the `package.json` will be installed. This option skips the interactive mode.",!1).option("-d, --dry-run","Get outdated packages installation command without automatic updating. If `tag` is not provided, version ranges in the `package.json` will be used.",!1).action(oo),oo=async e=>{let{tag:t,dryRun:r,all:n}=e,o=await U(q,"Checking for updates...");if(!(o!=null&&o.length)){console.log("All `refine` packages are up to date \u{1F389}");return}let s=n?no(t,o):await at(o);if(s){if(r){so(s);return}ao(s)}},no=(e,t)=>e==="wanted"&&t.every(o=>o.current===o.wanted)?(console.log("All `refine` packages are up to date with the wanted version \u{1F389}"),null):t.map(n=>{let o=e==="wanted"?n.wanted:e;return`${n.name}@${o}`}),so=async e=>{let t=await N(),r=D[t.name].install;console.log(`${t.name} ${r.join(" ")} ${e.join(" ")}`)},ao=e=>{console.log("Updating `refine` packages..."),console.log(e),H(e)},it=ro;import io from"envinfo";import co from"ora";var lo=e=>e.command("whoami").description("View the details of the development environment").action(po),po=async()=>{let e=co("Loading environment details...").start(),t=await io.run({System:["OS","CPU"],Binaries:["Node","Yarn","npm"],Browsers:["Chrome","Firefox","Safari"]},{showNotFound:!0,markdown:!0}),n=(await F()||[]).map(o=>` - ${o.name}: ${o.version}`).join(`
`);e.stop(),console.log(t),console.log("## Refine Packages:"),console.log(n)},ct=lo;import mo from"envinfo";import uo from"os";var fo=()=>{let e=uo.type();return{Darwin:"macOS",Linux:"Linux",Windows_NT:"Windows"}[e]},lt=async()=>{let[e,t]=await mo.helpers.getOSInfo();return{name:fo(),version:t}};import go from"node-fetch";var ho=async()=>{let e=await lt();return{nodeEnv:C.NODE_ENV,nodeVersion:process.version,os:e.name,osVersion:e.version,command:process.argv[2],packages:await F()||[],projectFramework:x()}},pt=async()=>{if(C.REFINE_NO_TELEMETRY!=="true")try{let e=await ho();await go("https://telemetry.refine.dev/cli",{method:"POST",body:JSON.stringify(e),headers:{"Content-Type":"application/json"}})}catch{}};import Eo from"react";import{Box as xo,Newline as wo,Text as j}from"ink";import _ from"react";var yo=()=>_.createElement(xo,{flexDirection:"column",alignItems:"flex-start",justifyContent:"flex-start",borderColor:"greenBright",borderStyle:"double",padding:1},_.createElement(j,{color:"greenBright"},"\u2705 Zero-trust security model"),_.createElement(j,{color:"greenBright"},"\u2705 User/role management"),_.createElement(j,{color:"greenBright"},"\u2705 Granular access control"),_.createElement(j,{color:"greenBright"},"\u2705 Directory sync"),_.createElement(j,{color:"greenBright"},"\u2705 VPN-less secure deployments"),_.createElement(j,{color:"greenBright"},"\u2705 Direct connection to DBs"),_.createElement(wo,null),_.createElement(j,null,"Interested in any of the new backend features of refine? Join now and get early access -> https://s.refine.dev/meet-enterprise")),mt=yo;import{render as To}from"ink";var Po=()=>To(Eo.createElement(mt,null)),dt=Po;var vo="1.0.0",bo=()=>{let e=new Io;e.version(`@refinedev/cli@${vo}`,"-v, --version","Output the current version.").description(Co.textSync("refine",{font:"Isometric1",horizontalLayout:"full",verticalLayout:"full",whitespaceBreak:!0})).usage("<command> [options]").helpOption("-h, --help","Output usage information."),ot(e),Ae(e),it(e),ce(e),le(e),ie(e),pe(e),be(e),ct(e),$e(e),e.hook("preAction",t=>{dt()}),e.hook("postAction",t=>{let r=t.args[0];["run"].includes(r)||pt()}),e.parse(process.argv),process.argv.slice(2).length||e.outputHelp()};bo();
//# sourceMappingURL=cli.js.map